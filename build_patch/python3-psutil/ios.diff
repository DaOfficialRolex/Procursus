diff --git a/setup.py b/setup.py
index 90c79c7..30f7332 100755
--- a/setup.py
+++ b/setup.py
@@ -18,6 +18,8 @@ import subprocess
 import sys
 import tempfile
 import warnings
+import distutils.sysconfig
+import _osx_support
 
 with warnings.catch_warnings():
     warnings.simplefilter("ignore")
@@ -47,7 +49,87 @@ from _common import WINDOWS  # NOQA
 from _compat import PY3  # NOQA
 from _compat import which  # NOQA
 
-
+def sanatizeFlags(flagStr):
+    reg = '(-isystem .*darwin-amd.*\/include)'
+    flagStr = re.sub(reg, '', flagStr)
+    reg = '(\/.*\/darwin-amd.*\/include)'
+    flagStr = re.sub(reg, '', flagStr)
+    reg = '(-L\/.*\/darwin-amd.*\/lib)'
+    flagStr = re.sub(reg, '', flagStr)
+    reg = '(-F\/.*\/darwin-amd.*\/Frameworks)'
+    flagStr = re.sub(reg, '', flagStr)
+    reg = '(-arch ' + platform.machine() + ')'
+    flagStr = re.sub(reg, '', flagStr)
+    reg = '(-mmacosx-version.*[0-9]{0,2}\.([0-9]{0,1})|([0-9]{0,2}))'
+    flagStr = re.sub(reg, '', flagStr)
+    reg = '(-isysroot \/.*MacOSX[0-9]{0,2}\.([0-9]{0,1})|([0-9]{0,2})\.sdk)'
+    flagStr = re.sub(reg, '', flagStr)
+    reg = '(-isysroot)'
+    flagStr = re.sub(reg, '', flagStr)
+    reg = '(-arch)'
+    flagStr = re.sub(reg, '', flagStr)
+    reg = '(  )'
+    flagStr = re.sub(reg, '', flagStr)
+    return flagStr
+
+def addFlags(flagName, flagStr):
+    if 'CFLAGS' in flagName:
+        flagStr += ' ' + str(os.getenv('CFLAGS'))
+    if 'CPPFLAGS' in flagName:
+        flagStr += ' ' + str(os.getenv('CPPFLAGS'))
+    if 'LDFLAGS' in flagName or flagName == 'BLDSHARED':
+        flagStr += ' ' + str(os.getenv('LDFLAGS'))
+    return flagStr
+
+def replaceFlags(flagName):
+    newFlagStr = sanatizeFlags(str(distutils.sysconfig.get_config_vars()[flagName]))
+    newFlagStr = addFlags(flagName, newFlagStr)
+    reg = '(  )'
+    newFlagStr = re.sub(reg, '', newFlagStr)
+    reg = '( sdk )'
+    newFlagStr = re.sub(reg, '', newFlagStr)
+    reg = '(-Osdk)'
+    newFlagStr = re.sub(reg, '', newFlagStr)
+    reg = '(-O sdk)'
+    newFlagStr = re.sub(reg, '', newFlagStr)
+    _osx_support._save_modified_value(distutils.sysconfig.get_config_vars(), flagName, newFlagStr)
+
+def printFlag(flagName):
+    print('DEBUG: Replaced flags for: %s: %s\n' % (flagName, distutils.sysconfig.get_config_vars()[flagName]))
+
+def doFlag(flagName):
+    # printFlag(flagName)
+    replaceFlags(flagName)
+    # printFlag(flagName)
+
+print('MEMO_ARCH: %s' % (os.getenv('MEMO_ARCH')))
+if os.getenv('MEMO_ARCH') != 'x86_64':
+    doFlag('BLDSHARED')
+    doFlag('CFLAGS')
+    doFlag('CONFIGURE_CFLAGS')
+    doFlag('CONFIGURE_CPPFLAGS')
+    doFlag('CONFIGURE_LDFLAGS')
+    doFlag('CONFIG_ARGS')
+    doFlag('CPPFLAGS')
+    doFlag('LDFLAGS')
+    doFlag('LDSHARED')
+    doFlag('PY_BUILTIN_MODULE_CFLAGS')
+    doFlag('PY_CFLAGS')
+    doFlag('PY_CORE_CFLAGS')
+    doFlag('PY_CORE_LDFLAGS')
+    doFlag('PY_CPPFLAGS')
+    doFlag('PY_LDFLAGS')
+    doFlag('PY_STDMODULE_CFLAGS')
+    doFlag('_OSX_SUPPORT_INITIAL_CFLAGS')
+    doFlag('_OSX_SUPPORT_INITIAL_LDFLAGS')
+    doFlag('_OSX_SUPPORT_INITIAL_CPPFLAGS')
+    doFlag('_OSX_SUPPORT_INITIAL_BLDSHARED')
+    doFlag('_OSX_SUPPORT_INITIAL_LDSHARED')
+    doFlag('_OSX_SUPPORT_INITIAL_PY_CFLAGS')
+    doFlag('_OSX_SUPPORT_INITIAL_PY_LDFLAGS')
+    doFlag('_OSX_SUPPORT_INITIAL_PY_CPPFLAGS')
+    doFlag('_OSX_SUPPORT_INITIAL_PY_CORE_CFLAGS')
+    doFlag('_OSX_SUPPORT_INITIAL_PY_CORE_LDFLAGS')
 PYPY = '__pypy__' in sys.builtin_module_names
 macros = []
 if POSIX:
